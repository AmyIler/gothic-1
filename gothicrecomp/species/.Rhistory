conc <- subset(sens.m.nlout, site=="konza")#
modlin <- lm(sens~meaneventdate, data=conc)#
modseg <- segmented(modlin, seg.Z = ~meaneventdate, psi=149, data=conc)
modseg
conc <- subset(sens.m.nlout, site=="gothic")#
modlin <- lm(sens~meaneventdate, data=conc)#
modseg <- segmented(modlin, seg.Z = ~meaneventdate, psi=149, data=conc)
modseg
pepclimsites <- subset(sens.m.nlout, site=="fitter"|site=="washdc"|site=="harvard"|site=="mohonk"|site=="concord")#
modlin <- lm(sens~meaneventdate, data=pepclimsites)#
modseg <- segmented(modlin, seg.Z = ~meaneventdate, psi=149, data=pepclimsites)#
# plot(modseg, add=TRUE)
modseg
pepclimsites <- subset(sens.m.nlout, site=="fitter"|site=="washdc"|site=="harvard"|site=="mohonk"
)
modlin <- lm(sens~meaneventdate, data=pepclimsites)#
modseg <- segmented(modlin, seg.Z = ~meaneventdate, psi=149, data=pepclimsites)#
# plot(modseg, add=TRUE)
modseg
modlin <- lm(sens~meaneventdate, data=pepclimsites)#
modseg <- segmented(modlin, seg.Z = ~meaneventdate, psi=200, data=pepclimsites)#
# plot(modseg, add=TRUE)
modseg
plot(sens~meaneventdate, data=pepclimsites)
head(pepclimsites)
pepclimsites <- subset(sens.m.nlout, site=="fitter"|site=="washdc"|site=="harvard"|site=="mohonk"|site=="concord")#
pepclimsites <- subset(pepclimsites, p.val<0.1)#
modlin <- lm(sens~meaneventdate, data=pepclimsites)#
modseg <- segmented(modlin, seg.Z = ~meaneventdate, psi=149, data=pepclimsites)
modseg
pepclimsites <- subset(sens.m.nlout, site=="fitter"|site=="washdc"|site=="harvard"|site=="mohonk")#
pepclimsites <- subset(pepclimsites, p.val<0.1)#
modlin <- lm(sens~meaneventdate, data=pepclimsites)#
modseg <- segmented(modlin, seg.Z = ~meaneventdate, psi=149, data=pepclimsites)#
# plot(modseg, add=TRUE)#
# with all data: including concord it's 106.9 (vs. 111.1)#
# excluding all >0.1 pvalue: with concord it's 115.3; without it's
modseg
pepclimsites <- subset(sens.m.nlout, site=="fitter"|site=="washdc"|site=="harvard"|site=="mohonk")#
pepclimsites <- subset(pepclimsites, p.val<0.05)#
modlin <- lm(sens~meaneventdate, data=pepclimsites)#
modseg <- segmented(modlin, seg.Z = ~meaneventdate, psi=149, data=pepclimsites)
modseg
plot(sens~meaneventdate, data=pepclimsites)
plot(modseg, add=TRUE)
pepclimsites <- subset(sens.m.nlout, site=="fitter"|site=="washdc"|site=="harvard"|site=="mohonk")#
# pepclimsites <- subset(pepclimsites, p.val<0.1)#
modlin <- lm(sens~meaneventdate, data=pepclimsites)#
modseg <- segmented(modlin, seg.Z = ~meaneventdate, psi=149, data=pepclimsites)
plot(modseg, add=TRUE)
pepclimsites <- subset(sens.m.nlout, site=="fitter"|site=="washdc"|site=="harvard"|site=="mohonk")#
pepclimsites <- subset(pepclimsites, p.val<0.1)#
modlin <- lm(sens~meaneventdate, data=pepclimsites)#
modseg <- segmented(modlin, seg.Z = ~meaneventdate, psi=149, data=pepclimsites)#
# plot(modseg, add=TRUE)#
# with all data: including concord it's 106.9 (vs. 111.1)#
# excluding all >0.1 pvalue: with concord it's 115.3; without it's 120.2#
# parameters#
f<-1#
x<-c(1.2, 2.2)#
x1<-c(0.9, 1.9)#
xtxt <- c(1,2)#
#
daterr <-subset(sens.m.nlout, phentype=="flo")#
#
leg.cex <- 0.5#
legend.x1 <- 20#
legend.y1 <- 33#
legend.x <- 260#
legend.y <- -11 # all data: 63#
#
obs <- daterr#
obssitenames <- unique(obs[["site"]])#
#
colobs <- c("thistle3", "thistle4", "pink3","pink4", "plum2", "plum3", #
      "plum4","dodgerblue1", "dodgerblue2", "dodgerblue3", "dodgerblue4")#
pchobs <- c(rep(1:11,2))#
#
par(mfrow=c(1,1))#
quartz("Quartz", width=8, height=5, pointsize=12)#
plot(daterr$sens~daterr$meaneventdate, type="n",#
    ylab="sensitivity", xlab="mean event date")#
for(i in c(1:length(obssitenames))){#
   dater <- subset(obs, site==obssitenames[i])#
   points(dater$sens~dater$meaneventdate, col=colobs[i], pch=pchobs[i])#
 }#
plot(modseg, add=TRUE)#
# abline(v=149, col="dodgerblue4") # from the Ecosystems ms.#
# abline(v=153.1, col="dodgerblue4")#
#
legend(legend.x, legend.y, rev(obssitenames), pch=rev(pchobs),#
    col=rev(colobs), cex=leg.cex, bty="n")#
breakdata.ben <- subset(sens.m.nlout, site=="fitter" | site=="gothic" |#
    site=="konza" | site=="concord" | site=="washdc" | site=="fargo")#
# not working: Concord, Fargo, Konza, WashDC#
#
# write.csv(breakdata.ben, "/Users/Lizzie/Desktop/breakdata.csv", row.names=FALSE)
nonpepsites <- subset(sens.m.nlout, site!="fitter" & site!="washdc" & site!="harvard"#
    & site!="mohonk" & site!="concord") # also excluding concord because not in Ben's Ecosystems paper#
#
allbutconc <- rbind(nonpepsites, pepclimsites)#
obssitenameshere <- unique(allbutconc[["site"]])#
#
par(mfrow=c(1,1))#
quartz("Quartz", width=8, height=5, pointsize=12)#
plot(pepclimsites$sens~pepclimsites$meaneventdate, type="n",#
    ylab="sensitivity", xlab="mean event date")#
for(i in c(1:length(unique(pepclimsites$site)))){#
   dater <- subset(pepclimsites, site==unique(pepclimsites$site)[i])#
   points(dater$sens~dater$meaneventdate, col=colobs[i], pch=pchobs[i])#
 }#
plot(modseg, add=TRUE)#
plot(nonpepsites$sens~nonpepsites$meaneventdate, type="n",#
    ylab="sensitivity", xlab="mean event date")#
for(i in c(1:length(unique(nonpepsites$site)))){#
   dater <- subset(nonpepsites, site==unique(nonpepsites$site)[i])#
   points(dater$sens~dater$meaneventdate, col=colobs[i], pch=pchobs[i])#
 }#
#
legend(legend.x, legend.y, rev(obssitenameshere), pch=rev(pchobs),#
    col=rev(colobs), cex=leg.cex, bty="n")
par(mfrow=c(1,1))#
quartz("Quartz", width=8, height=5, pointsize=12)#
plot(daterr$sens~daterr$meaneventdate, type="n",#
    ylab="sensitivity", xlab="mean event date")#
for(i in c(1:length(obssitenames))){#
   dater <- subset(obs, site==obssitenames[i])#
   points(dater$sens~dater$meaneventdate, col=colobs[i], pch=pchobs[i])#
 }#
plot(modseg, add=TRUE)#
# abline(v=149, col="dodgerblue4") # from the Ecosystems ms.#
# abline(v=153.1, col="dodgerblue4")#
#
legend(legend.x, legend.y, rev(obssitenames), pch=rev(pchobs),#
    col=rev(colobs), cex=leg.cex, bty="n")
nonpepsites <- subset(sens.m.nlout, site!="fitter" & site!="washdc" & site!="harvard"#
    & site!="mohonk" & site!="concord") # also excluding concord because not in Ben's Ecosystems paper#
#
allbutconc <- rbind(nonpepsites, pepclimsites)#
obssitenameshere <- unique(allbutconc[["site"]])#
#
par(mfrow=c(2,1))#
quartz("Quartz", width=8, height=10, pointsize=12)#
plot(pepclimsites$sens~pepclimsites$meaneventdate, type="n",#
    ylab="sensitivity", xlab="mean event date")#
for(i in c(1:length(unique(pepclimsites$site)))){#
   dater <- subset(pepclimsites, site==unique(pepclimsites$site)[i])#
   points(dater$sens~dater$meaneventdate, col=colobs[i], pch=pchobs[i])#
 }#
plot(modseg, add=TRUE)#
plot(nonpepsites$sens~nonpepsites$meaneventdate, type="n",#
    ylab="sensitivity", xlab="mean event date")#
for(i in c(1:length(unique(nonpepsites$site)))){#
   dater <- subset(nonpepsites, site==unique(nonpepsites$site)[i])#
   points(dater$sens~dater$meaneventdate, col=colobs[i], pch=pchobs[i])#
 }#
#
legend(legend.x, legend.y, rev(obssitenameshere), pch=rev(pchobs),#
    col=rev(colobs), cex=leg.cex, bty="n")
quartz("Quartz", width=8, height=10, pointsize=12)#
par(mfrow=c(2,1))#
plot(pepclimsites$sens~pepclimsites$meaneventdate, type="n",#
    ylab="sensitivity", xlab="mean event date")#
for(i in c(1:length(unique(pepclimsites$site)))){#
   dater <- subset(pepclimsites, site==unique(pepclimsites$site)[i])#
   points(dater$sens~dater$meaneventdate, col=colobs[i], pch=pchobs[i])#
 }#
plot(modseg, add=TRUE)#
plot(nonpepsites$sens~nonpepsites$meaneventdate, type="n",#
    ylab="sensitivity", xlab="mean event date")#
for(i in c(1:length(unique(nonpepsites$site)))){#
   dater <- subset(nonpepsites, site==unique(nonpepsites$site)[i])#
   points(dater$sens~dater$meaneventdate, col=colobs[i], pch=pchobs[i])#
 }#
#
legend(legend.x, legend.y, rev(obssitenameshere), pch=rev(pchobs),#
    col=rev(colobs), cex=leg.cex, bty="n")
allbutconc <- rbind(nonpepsites, pepclimsites)#
obssitenameshere <- unique(allbutconc[["site"]])#
colourz <- rbind(obssitenameshere, rev(colobs)[1:length(obssitenameshere)])
colourz
colobs <- c("thistle3", "thistle4", "pink3","pink4", "plum2", "plum3", #
      "plum4","dodgerblue1", "dodgerblue2", "dodgerblue3", "dodgerblue4",#
       "darkslateblue", "navy")#
pchobs <- c(rep(1:11,2))
obssitenameshere <- unique(allbutconc[["site"]])
colourz <- rbind(obssitenameshere, rev(colobs)[1:length(obssitenameshere)])
colourz
allbutconc <- rbind(nonpepsites, pepclimsites)#
allbutconc <- allbutconc[with(allbutconc, order(-MeanTemp)),]
obssitenameshere <- unique(allbutconc[["site"]])#
colourz <- rbind(obssitenameshere, rev(colobs)[1:length(obssitenameshere)])
colourz
dim(colourz)
names(colourz)
colourz <- rbind(obssitenameshere, colobs[1:length(obssitenameshere)])#
names(colourz) <- c("site", "col")
names(colourz)
colourz <- rbind(site=obssitenameshere, col=colobs[1:length(obssitenameshere)])
names(colourz)
colours
colourz
colourz["site"]
colourz <- as.data.frame(site=obssitenameshere, col=colobs[1:length(obssitenameshere)])
colourz <- as.dataframe(site=obssitenameshere, col=colobs[1:length(obssitenameshere)])
colourz <- as.data.frame(rbind(site=obssitenameshere, col=colobs[1:length(obssitenameshere)]))
colourz
colourz <- rbind(site=obssitenameshere, col=colobs[1:length(obssitenameshere)])
colourz[1,]
i == "fitter"
i <- "fitter"
unique(pepclimsites$site)[i]
unique(pepclimsites$site)
i <- 1
unique(pepclimsites$site)
unique(pepclimsites$site)[i]
colourz[,1]==unique(pepclimsites$site)[i]
as.data.frame(colourz)
colourz <- cbind(site=obssitenameshere, colobs[1:length(obssitenameshere)])
colourz
colourz <- cbind(site=obssitenameshere, col=colobs[1:length(obssitenameshere)])
colourz$site==unique(pepclimsites$site)[i]
colourz <- cbind(site=obssitenameshere, col=colobs[1:length(obssitenameshere)])
names(colourz)
as.data.frame(colourz)
colourz <- as.data.frame(cbind(site=obssitenameshere, col=colobs[1:length(obssitenameshere)]))
names(colourz)
colourhere <- colourz$site==unique(pepclimsites$site)[i]
colourhere
subset(colourz, site==unique(pepclimsites$site)[i])
nonpepsites <- subset(sens.m.nlout, site!="fitter" & site!="washdc" & site!="harvard"#
    & site!="mohonk" & site!="concord") # also excluding concord because not in Ben's Ecosystems paper#
#
allbutconc <- rbind(nonpepsites, pepclimsites)#
allbutconc <- allbutconc[with(allbutconc, order(-MeanTemp)),]#
#
obssitenameshere <- unique(allbutconc[["site"]])#
colourz <- as.data.frame(cbind(site=obssitenameshere, col=colobs[1:length(obssitenameshere)]))#
#
quartz("Quartz", width=6, height=10, pointsize=12)#
par(mfrow=c(2,1))#
plot(pepclimsites$sens~pepclimsites$meaneventdate, type="n",#
    ylab="sensitivity", xlab="mean event date")#
for(i in c(1:length(unique(pepclimsites$site)))){#
   dater <- subset(pepclimsites, site==unique(pepclimsites$site)[i])#
   colourhere <- subset(colourz, site==unique(pepclimsites$site)[i])#
   points(dater$sens~dater$meaneventdate, col=colourhere$col, pch=pchobs[i])#
 }#
plot(modseg, add=TRUE)#
plot(nonpepsites$sens~nonpepsites$meaneventdate, type="n",#
    ylab="sensitivity", xlab="mean event date")#
for(i in c(1:length(unique(nonpepsites$site)))){#
   dater <- subset(nonpepsites, site==unique(nonpepsites$site)[i])#
   colourhere <- subset(colourz, site==unique(pepclimsites$site)[i])#
   points(dater$sens~dater$meaneventdate, col=colourhere$col, pch=pchobs[i])#
 }#
#
legend(legend.x, legend.y, rev(obssitenameshere), pch=rev(pchobs),#
    col=rev(colobs), cex=leg.cex, bty="n")
quartz("Quartz", width=6, height=10, pointsize=12)#
par(mfrow=c(2,1))#
plot(pepclimsites$sens~pepclimsites$meaneventdate, type="n",#
    ylab="sensitivity", xlab="mean event date")#
for(i in c(1:length(unique(pepclimsites$site)))){#
   dater <- subset(pepclimsites, site==unique(pepclimsites$site)[i])#
   colourhere <- subset(colourz, site==unique(pepclimsites$site)[i])#
   points(dater$sens~dater$meaneventdate, col=colourhere$col, pch=pchobs[i])#
 }#
plot(modseg, add=TRUE)#
plot(nonpepsites$sens~nonpepsites$meaneventdate, type="n",#
    ylab="sensitivity", xlab="mean event date")#
for(i in c(1:length(unique(nonpepsites$site)))){#
   dater <- subset(nonpepsites, site==unique(nonpepsites$site)[i])#
   colourhere <- subset(colourz, site==unique(nonpepsites$site)[i])#
   points(dater$sens~dater$meaneventdate, col=colourhere$col, pch=pchobs[i])#
 }#
#
legend(legend.x, legend.y, rev(obssitenameshere), pch=rev(pchobs),#
    col=rev(colobs), cex=leg.cex, bty="n")
pch=pchobs[1:length(obssitenameshere)]
pch
allbutconc <- rbind(nonpepsites, pepclimsites)#
allbutconc <- allbutconc[with(allbutconc, order(-MeanTemp)),]#
#
obssitenameshere <- unique(allbutconc[["site"]])#
colourz <- as.data.frame(cbind(site=obssitenameshere,#
    col=colobs[1:length(obssitenameshere)]), pch=pchobs[1:length(obssitenameshere)]))#
#
quartz("Quartz", width=6, height=10, pointsize=12)#
par(mfrow=c(2,1))#
plot(pepclimsites$sens~pepclimsites$meaneventdate, type="n",#
    ylab="sensitivity", xlab="mean event date")#
for(i in c(1:length(unique(pepclimsites$site)))){#
   dater <- subset(pepclimsites, site==unique(pepclimsites$site)[i])#
   colourhere <- subset(colourz, site==unique(pepclimsites$site)[i])#
   points(dater$sens~dater$meaneventdate, col=colourhere$col, pch=colourhere$pch)#
 }#
plot(modseg, add=TRUE)#
plot(nonpepsites$sens~nonpepsites$meaneventdate, type="n",#
    ylab="sensitivity", xlab="mean event date")#
for(i in c(1:length(unique(nonpepsites$site)))){#
   dater <- subset(nonpepsites, site==unique(nonpepsites$site)[i])#
   colourhere <- subset(colourz, site==unique(nonpepsites$site)[i])#
   points(dater$sens~dater$meaneventdate, col=colourhere$col, pch=colourhere$pch)#
 }#
#
legend(legend.x, legend.y, rev(obssitenameshere), pch=rev(pchobs),#
    col=rev(colobs), cex=leg.cex, bty="n")
colourz <- as.data.frame(cbind(site=obssitenameshere,#
    col=colobs[1:length(obssitenameshere)]), pch=pchobs[1:length(obssitenameshere)])
allbutconc <- rbind(nonpepsites, pepclimsites)#
allbutconc <- allbutconc[with(allbutconc, order(-MeanTemp)),]#
#
obssitenameshere <- unique(allbutconc[["site"]])#
colourz <- as.data.frame(cbind(site=obssitenameshere,#
    col=colobs[1:length(obssitenameshere)]), pch=rev(pchobs[1:length(obssitenameshere)]))#
#
quartz("Quartz", width=6, height=10, pointsize=12)#
par(mfrow=c(2,1))#
plot(pepclimsites$sens~pepclimsites$meaneventdate, type="n",#
    ylab="sensitivity", xlab="mean event date")#
for(i in c(1:length(unique(pepclimsites$site)))){#
   dater <- subset(pepclimsites, site==unique(pepclimsites$site)[i])#
   colourhere <- subset(colourz, site==unique(pepclimsites$site)[i])#
   points(dater$sens~dater$meaneventdate, col=colourhere$col, pch=colourhere$pch)#
 }#
plot(modseg, add=TRUE)#
plot(nonpepsites$sens~nonpepsites$meaneventdate, type="n",#
    ylab="sensitivity", xlab="mean event date")#
for(i in c(1:length(unique(nonpepsites$site)))){#
   dater <- subset(nonpepsites, site==unique(nonpepsites$site)[i])#
   colourhere <- subset(colourz, site==unique(nonpepsites$site)[i])#
   points(dater$sens~dater$meaneventdate, col=colourhere$col, pch=colourhere$pch)#
 }
colourz
colourz <- as.data.frame(cbind(site=obssitenameshere,#
    col=colobs[1:length(obssitenameshere)], pch=rev(pchobs[1:length(obssitenameshere)])))
quartz("Quartz", width=6, height=10, pointsize=12)#
par(mfrow=c(2,1))#
plot(pepclimsites$sens~pepclimsites$meaneventdate, type="n",#
    ylab="sensitivity", xlab="mean event date")#
for(i in c(1:length(unique(pepclimsites$site)))){#
   dater <- subset(pepclimsites, site==unique(pepclimsites$site)[i])#
   colourhere <- subset(colourz, site==unique(pepclimsites$site)[i])#
   points(dater$sens~dater$meaneventdate, col=colourhere$col, pch=colourhere$pch)#
 }#
plot(modseg, add=TRUE)#
plot(nonpepsites$sens~nonpepsites$meaneventdate, type="n",#
    ylab="sensitivity", xlab="mean event date")#
for(i in c(1:length(unique(nonpepsites$site)))){#
   dater <- subset(nonpepsites, site==unique(nonpepsites$site)[i])#
   colourhere <- subset(colourz, site==unique(nonpepsites$site)[i])#
   points(dater$sens~dater$meaneventdate, col=colourhere$col, pch=colourhere$pch)#
 }
colourz
allbutconc <- rbind(nonpepsites, pepclimsites)#
allbutconc <- allbutconc[with(allbutconc, order(-MeanTemp)),]#
#
obssitenameshere <- unique(allbutconc[["site"]])#
colourz <- as.data.frame(cbind(site=obssitenameshere,#
    col=colobs[1:length(obssitenameshere)], pch=rev(pchobs[1:length(obssitenameshere)])))#
colourz$pch <- as.numeric(colourz$pch)#
#
quartz("Quartz", width=6, height=10, pointsize=12)#
par(mfrow=c(2,1))#
plot(pepclimsites$sens~pepclimsites$meaneventdate, type="n",#
    ylab="sensitivity", xlab="mean event date")#
for(i in c(1:length(unique(pepclimsites$site)))){#
   dater <- subset(pepclimsites, site==unique(pepclimsites$site)[i])#
   colourhere <- subset(colourz, site==unique(pepclimsites$site)[i])#
   points(dater$sens~dater$meaneventdate, col=colourhere$col, pch=colourhere$pch)#
 }#
plot(modseg, add=TRUE)#
plot(nonpepsites$sens~nonpepsites$meaneventdate, type="n",#
    ylab="sensitivity", xlab="mean event date")#
for(i in c(1:length(unique(nonpepsites$site)))){#
   dater <- subset(nonpepsites, site==unique(nonpepsites$site)[i])#
   colourhere <- subset(colourz, site==unique(nonpepsites$site)[i])#
   points(dater$sens~dater$meaneventdate, col=colourhere$col, pch=colourhere$pch)#
 }
legend(legend.x, legend.y, rev(obssitenameshere), pch=colourz$pch,#
    col=rev(colobs), cex=leg.cex, bty="n")
nonpepsites <- subset(sens.m.nlout, site!="fitter" & site!="washdc" & site!="harvard"#
    & site!="mohonk" & site!="concord") # also excluding concord because not in Ben's Ecosystems paper#
#
allbutconc <- rbind(nonpepsites, pepclimsites)#
allbutconc <- allbutconc[with(allbutconc, order(-MeanTemp)),]#
#
obssitenameshere <- unique(allbutconc[["site"]])#
colourz <- as.data.frame(cbind(site=obssitenameshere,#
    col=colobs[1:length(obssitenameshere)], pch=rev(pchobs[1:length(obssitenameshere)])))#
colourz$pch <- as.numeric(colourz$pch)#
#
quartz("Quartz", width=6, height=10, pointsize=12)#
par(mfrow=c(2,1))#
plot(pepclimsites$sens~pepclimsites$meaneventdate, type="n",#
    ylab="sensitivity", xlab="mean event date")#
for(i in c(1:length(unique(pepclimsites$site)))){#
   dater <- subset(pepclimsites, site==unique(pepclimsites$site)[i])#
   colourhere <- subset(colourz, site==unique(pepclimsites$site)[i])#
   points(dater$sens~dater$meaneventdate, col=colourhere$col, pch=colourhere$pch)#
 }#
plot(modseg, add=TRUE)#
plot(nonpepsites$sens~nonpepsites$meaneventdate, type="n",#
    ylab="sensitivity", xlab="mean event date")#
for(i in c(1:length(unique(nonpepsites$site)))){#
   dater <- subset(nonpepsites, site==unique(nonpepsites$site)[i])#
   colourhere <- subset(colourz, site==unique(nonpepsites$site)[i])#
   points(dater$sens~dater$meaneventdate, col=colourhere$col, pch=colourhere$pch)#
 }#
#
legend(legend.x, legend.y, rev(obssitenameshere), pch=rev(colourz$pch),#
    col=rev(colourz$col), cex=leg.cex, bty="n")
colourz
colobs <- c("thistle3", "thistle4", "pink3","pink4", "plum3", #
      "plum4", "skyblue2", "dodgerblue1", "dodgerblue2", "dodgerblue3", "dodgerblue4",#
       "darkslateblue", "navy")#
pchobs <- c(rep(1:11,2))
obssitenameshere <- unique(allbutconc[["site"]])#
colourz <- as.data.frame(cbind(site=obssitenameshere,#
    col=colobs[1:length(obssitenameshere)], pch=rev(pchobs[1:length(obssitenameshere)])))#
colourz$pch <- as.numeric(colourz$pch)#
#
quartz("Quartz", width=6, height=10, pointsize=12)#
par(mfrow=c(2,1))#
plot(pepclimsites$sens~pepclimsites$meaneventdate, type="n",#
    ylab="sensitivity", xlab="mean event date")#
for(i in c(1:length(unique(pepclimsites$site)))){#
   dater <- subset(pepclimsites, site==unique(pepclimsites$site)[i])#
   colourhere <- subset(colourz, site==unique(pepclimsites$site)[i])#
   points(dater$sens~dater$meaneventdate, col=colourhere$col, pch=colourhere$pch)#
 }#
plot(modseg, add=TRUE)#
plot(nonpepsites$sens~nonpepsites$meaneventdate, type="n",#
    ylab="sensitivity", xlab="mean event date")#
for(i in c(1:length(unique(nonpepsites$site)))){#
   dater <- subset(nonpepsites, site==unique(nonpepsites$site)[i])#
   colourhere <- subset(colourz, site==unique(nonpepsites$site)[i])#
   points(dater$sens~dater$meaneventdate, col=colourhere$col, pch=colourhere$pch)#
 }#
#
legend(legend.x, legend.y, rev(obssitenameshere), pch=rev(colourz$pch),#
    col=rev(colourz$col), cex=leg.cex, bty="n")
colobs <- c("thistle3", "thistle4", "pink3","pink4", "plum3", #
      "plum4", "skyblue2", "dodgerblue1", "dodgerblue2", "dodgerblue3", "dodgerblue4",#
       "darkslateblue", "navy")#
pchobs <- c(rep(1:11,2))
colourz
colobs <- c("thistle3", "thistle4", "pink4", "plum3", "plum4", #
      "skyblue3", "skyblue4", "dodgerblue1", "dodgerblue2", "dodgerblue3", "dodgerblue4",#
       "darkslateblue", "navy")
obssitenameshere <- unique(allbutconc[["site"]])#
colourz <- as.data.frame(cbind(site=obssitenameshere,#
    col=colobs[1:length(obssitenameshere)], pch=rev(pchobs[1:length(obssitenameshere)])))#
colourz$pch <- as.numeric(colourz$pch)#
#
quartz("Quartz", width=6, height=10, pointsize=12)#
par(mfrow=c(2,1))#
plot(pepclimsites$sens~pepclimsites$meaneventdate, type="n",#
    ylab="sensitivity", xlab="mean event date")#
for(i in c(1:length(unique(pepclimsites$site)))){#
   dater <- subset(pepclimsites, site==unique(pepclimsites$site)[i])#
   colourhere <- subset(colourz, site==unique(pepclimsites$site)[i])#
   points(dater$sens~dater$meaneventdate, col=colourhere$col, pch=colourhere$pch)#
 }#
plot(modseg, add=TRUE)#
plot(nonpepsites$sens~nonpepsites$meaneventdate, type="n",#
    ylab="sensitivity", xlab="mean event date")#
for(i in c(1:length(unique(nonpepsites$site)))){#
   dater <- subset(nonpepsites, site==unique(nonpepsites$site)[i])#
   colourhere <- subset(colourz, site==unique(nonpepsites$site)[i])#
   points(dater$sens~dater$meaneventdate, col=colourhere$col, pch=colourhere$pch)#
 }#
#
legend(legend.x, legend.y, rev(obssitenameshere), pch=rev(colourz$pch),#
    col=rev(colourz$col), cex=leg.cex, bty="n")
colourz
colobs <- c("thistle3", "thistle4", "pink4", "plum3", "plum4", #
      "skyblue3", "skyblue4", "dodgerblue1", "dodgerblue2", "dodgerblue3", "dodgerblue4",#
       "darkslateblue", "navy")#
pchobs <- c(rep(1:11,2))#
pchobs[5] <- 1
obssitenameshere <- unique(allbutconc[["site"]])#
colourz <- as.data.frame(cbind(site=obssitenameshere,#
    col=colobs[1:length(obssitenameshere)], pch=rev(pchobs[1:length(obssitenameshere)])))#
colourz$pch <- as.numeric(colourz$pch)#
#
quartz("Quartz", width=6, height=10, pointsize=12)#
par(mfrow=c(2,1))#
plot(pepclimsites$sens~pepclimsites$meaneventdate, type="n",#
    ylab="sensitivity", xlab="mean event date")#
for(i in c(1:length(unique(pepclimsites$site)))){#
   dater <- subset(pepclimsites, site==unique(pepclimsites$site)[i])#
   colourhere <- subset(colourz, site==unique(pepclimsites$site)[i])#
   points(dater$sens~dater$meaneventdate, col=colourhere$col, pch=colourhere$pch)#
 }#
plot(modseg, add=TRUE)#
plot(nonpepsites$sens~nonpepsites$meaneventdate, type="n",#
    ylab="sensitivity", xlab="mean event date")#
for(i in c(1:length(unique(nonpepsites$site)))){#
   dater <- subset(nonpepsites, site==unique(nonpepsites$site)[i])#
   colourhere <- subset(colourz, site==unique(nonpepsites$site)[i])#
   points(dater$sens~dater$meaneventdate, col=colourhere$col, pch=colourhere$pch)#
 }#
#
legend(legend.x, legend.y, rev(obssitenameshere), pch=rev(colourz$pch),#
    col=rev(colourz$col), cex=leg.cex, bty="n")
pchobs
colourz
colobs <- c("thistle3", "thistle4", "pink4", "plum3", "plum4", #
      "skyblue3", "skyblue4", "dodgerblue1", "dodgerblue2", "dodgerblue3", "dodgerblue4",#
       "darkslateblue", "navy")#
pchobs <- c(rep(1:11,2))#
pchobs[5] <- 1
allbutconc <- rbind(nonpepsites, pepclimsites)#
allbutconc <- allbutconc[with(allbutconc, order(-MeanTemp)),]#
#
obssitenameshere <- unique(allbutconc[["site"]])#
colourz <- as.data.frame(cbind(site=obssitenameshere,#
    col=colobs[1:length(obssitenameshere)], pch=rev(pchobs[1:length(obssitenameshere)])))#
colourz$pch <- as.numeric(colourz$pch)
colourz
pchobs
colobs <- c("thistle3", "thistle4", "pink4", "plum3", "plum4", #
      "skyblue3", "skyblue4", "dodgerblue1", "dodgerblue2", "dodgerblue3", "dodgerblue4",#
       "darkslateblue", "navy")#
pchobs <- c(rep(1:11,2))#
pchobs[9] <- 1
allbutconc <- rbind(nonpepsites, pepclimsites)#
allbutconc <- allbutconc[with(allbutconc, order(-MeanTemp)),]#
#
obssitenameshere <- unique(allbutconc[["site"]])#
colourz <- as.data.frame(cbind(site=obssitenameshere,#
    col=colobs[1:length(obssitenameshere)], pch=rev(pchobs[1:length(obssitenameshere)])))#
colourz$pch <- as.numeric(colourz$pch)
colourz
obssitenameshere <- unique(allbutconc[["site"]])#
colourz <- as.data.frame(cbind(site=obssitenameshere,#
    col=colobs[1:length(obssitenameshere)], pch=rev(pchobs[1:length(obssitenameshere)])))#
colourz$pch <- as.numeric(colourz$pch)#
#
quartz("Quartz", width=6, height=10, pointsize=12)#
par(mfrow=c(2,1))#
plot(pepclimsites$sens~pepclimsites$meaneventdate, type="n",#
    ylab="sensitivity", xlab="mean event date")#
for(i in c(1:length(unique(pepclimsites$site)))){#
   dater <- subset(pepclimsites, site==unique(pepclimsites$site)[i])#
   colourhere <- subset(colourz, site==unique(pepclimsites$site)[i])#
   points(dater$sens~dater$meaneventdate, col=colourhere$col, pch=colourhere$pch)#
 }#
plot(modseg, add=TRUE)#
plot(nonpepsites$sens~nonpepsites$meaneventdate, type="n",#
    ylab="sensitivity", xlab="mean event date")#
for(i in c(1:length(unique(nonpepsites$site)))){#
   dater <- subset(nonpepsites, site==unique(nonpepsites$site)[i])#
   colourhere <- subset(colourz, site==unique(nonpepsites$site)[i])#
   points(dater$sens~dater$meaneventdate, col=colourhere$col, pch=colourhere$pch)#
 }#
#
legend(legend.x, legend.y, rev(obssitenameshere), pch=rev(colourz$pch),#
    col=rev(colourz$col), cex=leg.cex, bty="n")
ylim<-c(-41, 33)#
#
nonpepsites <- subset(sens.m.nlout, site!="fitter" & site!="washdc" & site!="harvard"#
    & site!="mohonk" & site!="concord") # also excluding concord because not in Ben's Ecosystems paper#
#
allbutconc <- rbind(nonpepsites, pepclimsites)#
allbutconc <- allbutconc[with(allbutconc, order(-MeanTemp)),]#
#
obssitenameshere <- unique(allbutconc[["site"]])#
colourz <- as.data.frame(cbind(site=obssitenameshere,#
    col=colobs[1:length(obssitenameshere)], pch=rev(pchobs[1:length(obssitenameshere)])))#
colourz$pch <- as.numeric(colourz$pch)#
#
quartz("Quartz", width=6, height=10, pointsize=12)#
par(mfrow=c(2,1))#
plot(pepclimsites$sens~pepclimsites$meaneventdate, type="n",#
    ylab="sensitivity", xlab="mean event date", ylim=ylim)#
for(i in c(1:length(unique(pepclimsites$site)))){#
   dater <- subset(pepclimsites, site==unique(pepclimsites$site)[i])#
   colourhere <- subset(colourz, site==unique(pepclimsites$site)[i])#
   points(dater$sens~dater$meaneventdate, col=colourhere$col,#
      pch=colourhere$pch, ylim=ylim)#
 }#
plot(modseg, add=TRUE)#
plot(nonpepsites$sens~nonpepsites$meaneventdate, type="n",#
    ylab="sensitivity", xlab="mean event date", ylim=ylim)#
for(i in c(1:length(unique(nonpepsites$site)))){#
   dater <- subset(nonpepsites, site==unique(nonpepsites$site)[i])#
   colourhere <- subset(colourz, site==unique(nonpepsites$site)[i])#
   points(dater$sens~dater$meaneventdate, col=colourhere$col,#
       pch=colourhere$pch, ylim=ylim)#
 }#
#
legend(legend.x, legend.y, rev(obssitenameshere), pch=rev(colourz$pch),#
    col=rev(colourz$col), cex=leg.cex, bty="n")
ylim<-c(-40, 30)#
#
nonpepsites <- subset(sens.m.nlout, site!="fitter" & site!="washdc" & site!="harvard"#
    & site!="mohonk" & site!="concord") # also excluding concord because not in Ben's Ecosystems paper#
#
allbutconc <- rbind(nonpepsites, pepclimsites)#
allbutconc <- allbutconc[with(allbutconc, order(-MeanTemp)),]#
#
obssitenameshere <- unique(allbutconc[["site"]])#
colourz <- as.data.frame(cbind(site=obssitenameshere,#
    col=colobs[1:length(obssitenameshere)], pch=rev(pchobs[1:length(obssitenameshere)])))#
colourz$pch <- as.numeric(colourz$pch)#
#
quartz("Quartz", width=6, height=10, pointsize=12)#
par(mfrow=c(2,1))#
plot(pepclimsites$sens~pepclimsites$meaneventdate, type="n",#
    ylab="sensitivity", xlab="mean event date", ylim=ylim)#
for(i in c(1:length(unique(pepclimsites$site)))){#
   dater <- subset(pepclimsites, site==unique(pepclimsites$site)[i])#
   colourhere <- subset(colourz, site==unique(pepclimsites$site)[i])#
   points(dater$sens~dater$meaneventdate, col=colourhere$col,#
      pch=colourhere$pch, ylim=ylim)#
 }#
plot(modseg, add=TRUE)#
plot(nonpepsites$sens~nonpepsites$meaneventdate, type="n",#
    ylab="sensitivity", xlab="mean event date", ylim=ylim)#
for(i in c(1:length(unique(nonpepsites$site)))){#
   dater <- subset(nonpepsites, site==unique(nonpepsites$site)[i])#
   colourhere <- subset(colourz, site==unique(nonpepsites$site)[i])#
   points(dater$sens~dater$meaneventdate, col=colourhere$col,#
       pch=colourhere$pch, ylim=ylim)#
 }#
#
legend(legend.x, legend.y, rev(obssitenameshere), pch=rev(colourz$pch),#
    col=rev(colourz$col), cex=leg.cex, bty="n")
options(stringsAsFactors=FALSE)#
#
# library(RColorBrewer)#
library(segmented)#
library(zoo)#
#
sens.m <- read.csv("~/Documents/R/NCEAS/Phenology/WorkingGroup/Experiments/Meta/outputdata/obs.csv", header=TRUE)#
# sens.m is main sensitivity#
names(sens.m)[names(sens.m)=="sens.m"] <- "sens"#
sens.m.sm <- subset(sens.m, select=c("genus", "species", "p.val", "sens", "phase",#
     "meaneventdate", "site", "phentype"))#
#
# climate data#
climat <- read.csv("~/Documents/R/NCEAS/Phenology/WorkingGroup/Experiments/Meta/outputdata/siteinfo/climat.csv", header=TRUE)#
climat.mat <- subset(climat, select=c("site", "MinTemp", "MeanTemp"))#
#
sens.m.smclim <- merge(sens.m.sm, climat.mat, by="site")#
#
# subset as done in manuscript#
sens.m.nl <- subset(sens.m.smclim, site!="bertel" & site!="luquillo" & site !="sevcore")#
sens.m.nlout <- subset(sens.m.nl, abs(sens)<40)#
#
# sort sites by MAT#
sens.m.nlout <- sens.m.nlout[with(sens.m.nlout, order(-MeanTemp)),]#
#
###
## Do some breakpoint work#
###
#
# do for washdc, konza, concord, fargo, chinnor and gothic#
# other sites have less than 100 species#
#
# method 1: use segmented package (see method 2, way below)#
conc <- subset(sens.m.nlout, site=="concord")#
modlin <- lm(sens~meaneventdate, data=conc)#
modseg <- segmented(modlin, seg.Z = ~meaneventdate, psi=149, data=conc)#
#
# concord is 128, fitter is 50, dc is 106, konza is 70, and gothic is 157#
#
pepclimsites <- subset(sens.m.nlout, phentype=="flo")#
pepclimsites <- subset(pepclimsites, site=="fitter"|site=="washdc"|site=="harvard"|site=="mohonk")#
pepclimsites <- subset(pepclimsites, p.val<0.1)#
modlin <- lm(sens~meaneventdate, data=pepclimsites)#
modseg <- segmented(modlin, seg.Z = ~meaneventdate, psi=149, data=pepclimsites)#
# plot(modseg, add=TRUE)#
# with all data: including concord it's 106.9 (vs. 111.1)#
# excluding all >0.1 pvalue: with concord it's 115.3; without it's 120.2#
# parameters#
f<-1#
x<-c(1.2, 2.2)#
x1<-c(0.9, 1.9)#
xtxt <- c(1,2)#
#
daterr <-subset(sens.m.nlout, phentype=="flo")#
#
leg.cex <- 0.5#
legend.x1 <- 20#
legend.y1 <- 33#
legend.x <- 260#
legend.y <- -11 # all data: 63#
#
obs <- daterr#
obssitenames <- unique(obs[["site"]])#
#
colobs <- c("thistle3", "thistle4", "pink4", "plum3", "plum4", #
      "skyblue3", "skyblue4", "dodgerblue1", "dodgerblue2", "dodgerblue3", "dodgerblue4",#
       "darkslateblue", "navy")#
pchobs <- c(rep(1:11,2))#
pchobs[9] <- 1#
#
###
## all on one figure#
#
par(mfrow=c(1,1))#
quartz("Quartz", width=8, height=5, pointsize=12)#
plot(daterr$sens~daterr$meaneventdate, type="n",#
    ylab="sensitivity", xlab="mean event date")#
for(i in c(1:length(obssitenames))){#
   dater <- subset(obs, site==obssitenames[i])#
   points(dater$sens~dater$meaneventdate, col=colobs[i], pch=pchobs[i])#
 }#
plot(modseg, add=TRUE)#
# abline(v=149, col="dodgerblue4") # from the Ecosystems ms.#
# abline(v=153.1, col="dodgerblue4")#
#
legend(legend.x, legend.y, rev(obssitenames), pch=rev(pchobs),#
    col=rev(colobs), cex=leg.cex, bty="n")#
###
## two figures#
#
ylim<-c(-41, 33)#
#
nonpepsites <- subset(sens.m.nlout, phentype=="flo")#
nonpepsites <- subset(sens.m.nlout, site!="fitter" & site!="washdc" & site!="harvard"#
    & site!="mohonk" & site!="concord") # also excluding concord because not in Ben's Ecosystems paper#
#
allbutconc <- rbind(nonpepsites, pepclimsites)#
allbutconc <- allbutconc[with(allbutconc, order(-MeanTemp)),]#
#
obssitenameshere <- unique(allbutconc[["site"]])#
colourz <- as.data.frame(cbind(site=obssitenameshere,#
    col=colobs[1:length(obssitenameshere)], pch=rev(pchobs[1:length(obssitenameshere)])))#
colourz$pch <- as.numeric(colourz$pch)#
#
quartz("Quartz", width=6, height=10, pointsize=12)#
par(mfrow=c(2,1))#
plot(pepclimsites$sens~pepclimsites$meaneventdate, type="n",#
    ylab="sensitivity", xlab="mean event date", ylim=ylim)#
for(i in c(1:length(unique(pepclimsites$site)))){#
   dater <- subset(pepclimsites, site==unique(pepclimsites$site)[i])#
   colourhere <- subset(colourz, site==unique(pepclimsites$site)[i])#
   points(dater$sens~dater$meaneventdate, col=colourhere$col,#
      pch=colourhere$pch, ylim=ylim)#
 }#
plot(modseg, add=TRUE)#
plot(nonpepsites$sens~nonpepsites$meaneventdate, type="n",#
    ylab="sensitivity", xlab="mean event date", ylim=ylim)#
for(i in c(1:length(unique(nonpepsites$site)))){#
   dater <- subset(nonpepsites, site==unique(nonpepsites$site)[i])#
   colourhere <- subset(colourz, site==unique(nonpepsites$site)[i])#
   points(dater$sens~dater$meaneventdate, col=colourhere$col,#
       pch=colourhere$pch, ylim=ylim)#
 }#
#
legend(legend.x, legend.y, rev(obssitenameshere), pch=rev(colourz$pch),#
    col=rev(colourz$col), cex=leg.cex, bty="n")
ylim<-c(-40, 30)#
#
nonpepsites <- subset(sens.m.nlout, phentype=="flo")#
nonpepsites <- subset(sens.m.nlout, site!="fitter" & site!="washdc" & site!="harvard"#
    & site!="mohonk" & site!="concord") # also excluding concord because not in Ben's Ecosystems paper#
#
allbutconc <- rbind(nonpepsites, pepclimsites)#
allbutconc <- allbutconc[with(allbutconc, order(-MeanTemp)),]#
#
obssitenameshere <- unique(allbutconc[["site"]])#
colourz <- as.data.frame(cbind(site=obssitenameshere,#
    col=colobs[1:length(obssitenameshere)], pch=rev(pchobs[1:length(obssitenameshere)])))#
colourz$pch <- as.numeric(colourz$pch)#
#
quartz("Quartz", width=6, height=10, pointsize=12)#
par(mfrow=c(2,1))#
plot(pepclimsites$sens~pepclimsites$meaneventdate, type="n",#
    ylab="sensitivity", xlab="mean event date", ylim=ylim)#
for(i in c(1:length(unique(pepclimsites$site)))){#
   dater <- subset(pepclimsites, site==unique(pepclimsites$site)[i])#
   colourhere <- subset(colourz, site==unique(pepclimsites$site)[i])#
   points(dater$sens~dater$meaneventdate, col=colourhere$col,#
      pch=colourhere$pch, ylim=ylim)#
 }#
plot(modseg, add=TRUE)#
plot(nonpepsites$sens~nonpepsites$meaneventdate, type="n",#
    ylab="sensitivity", xlab="mean event date", ylim=ylim)#
for(i in c(1:length(unique(nonpepsites$site)))){#
   dater <- subset(nonpepsites, site==unique(nonpepsites$site)[i])#
   colourhere <- subset(colourz, site==unique(nonpepsites$site)[i])#
   points(dater$sens~dater$meaneventdate, col=colourhere$col,#
       pch=colourhere$pch, ylim=ylim)#
 }#
#
legend(legend.x, legend.y, rev(obssitenameshere), pch=rev(colourz$pch),#
    col=rev(colourz$col), cex=leg.cex, bty="n")
ylim<-c(-40, 30)#
#
nonpepsites <- subset(sens.m.nlout, phentype=="flo")#
nonpepsites <- subset(nonpepsites, site!="fitter" & site!="washdc" & site!="harvard"#
    & site!="mohonk" & site!="concord") # also excluding concord because not in Ben's Ecosystems paper#
#
allbutconc <- rbind(nonpepsites, pepclimsites)#
allbutconc <- allbutconc[with(allbutconc, order(-MeanTemp)),]#
#
obssitenameshere <- unique(allbutconc[["site"]])#
colourz <- as.data.frame(cbind(site=obssitenameshere,#
    col=colobs[1:length(obssitenameshere)], pch=rev(pchobs[1:length(obssitenameshere)])))#
colourz$pch <- as.numeric(colourz$pch)#
#
quartz("Quartz", width=6, height=10, pointsize=12)#
par(mfrow=c(2,1))#
plot(pepclimsites$sens~pepclimsites$meaneventdate, type="n",#
    ylab="sensitivity", xlab="mean event date", ylim=ylim)#
for(i in c(1:length(unique(pepclimsites$site)))){#
   dater <- subset(pepclimsites, site==unique(pepclimsites$site)[i])#
   colourhere <- subset(colourz, site==unique(pepclimsites$site)[i])#
   points(dater$sens~dater$meaneventdate, col=colourhere$col,#
      pch=colourhere$pch, ylim=ylim)#
 }#
plot(modseg, add=TRUE)#
plot(nonpepsites$sens~nonpepsites$meaneventdate, type="n",#
    ylab="sensitivity", xlab="mean event date", ylim=ylim)#
for(i in c(1:length(unique(nonpepsites$site)))){#
   dater <- subset(nonpepsites, site==unique(nonpepsites$site)[i])#
   colourhere <- subset(colourz, site==unique(nonpepsites$site)[i])#
   points(dater$sens~dater$meaneventdate, col=colourhere$col,#
       pch=colourhere$pch, ylim=ylim)#
 }#
#
legend(legend.x, legend.y, rev(obssitenameshere), pch=rev(colourz$pch),#
    col=rev(colourz$col), cex=leg.cex, bty="n")
colobs <- c("thistle4", "pink4", "plum4", #
      "skyblue3", "skyblue4", "dodgerblue1", "dodgerblue2", "dodgerblue3", "dodgerblue4",#
       "darkslateblue", "navy")#
pchobs <- c(rep(1:11,2))
pchobs
colobs <- c("thistle4", "pink4", "plum4", #
      "skyblue3", "skyblue4", "dodgerblue1", "dodgerblue2", "dodgerblue3", "dodgerblue4",#
       "darkslateblue", "navy")#
pchobs <- c(rep(1:11,2))#
pchobs[9] <- 1
ylim<-c(-40, 30)#
#
nonpepsites <- subset(sens.m.nlout, phentype=="flo")#
nonpepsites <- subset(nonpepsites, site!="fitter" & site!="washdc" & site!="harvard"#
    & site!="mohonk" & site!="concord") # also excluding concord because not in Ben's Ecosystems paper#
#
allbutconc <- rbind(nonpepsites, pepclimsites)#
allbutconc <- allbutconc[with(allbutconc, order(-MeanTemp)),]#
#
obssitenameshere <- unique(allbutconc[["site"]])#
colourz <- as.data.frame(cbind(site=obssitenameshere,#
    col=colobs[1:length(obssitenameshere)], pch=rev(pchobs[1:length(obssitenameshere)])))#
colourz$pch <- as.numeric(colourz$pch)#
#
quartz("Quartz", width=6, height=10, pointsize=12)#
par(mfrow=c(2,1))#
plot(pepclimsites$sens~pepclimsites$meaneventdate, type="n",#
    ylab="sensitivity", xlab="mean event date", ylim=ylim)#
for(i in c(1:length(unique(pepclimsites$site)))){#
   dater <- subset(pepclimsites, site==unique(pepclimsites$site)[i])#
   colourhere <- subset(colourz, site==unique(pepclimsites$site)[i])#
   points(dater$sens~dater$meaneventdate, col=colourhere$col,#
      pch=colourhere$pch, ylim=ylim)#
 }#
plot(modseg, add=TRUE)#
plot(nonpepsites$sens~nonpepsites$meaneventdate, type="n",#
    ylab="sensitivity", xlab="mean event date", ylim=ylim)#
for(i in c(1:length(unique(nonpepsites$site)))){#
   dater <- subset(nonpepsites, site==unique(nonpepsites$site)[i])#
   colourhere <- subset(colourz, site==unique(nonpepsites$site)[i])#
   points(dater$sens~dater$meaneventdate, col=colourhere$col,#
       pch=colourhere$pch, ylim=ylim)#
 }#
#
legend(legend.x, legend.y, rev(obssitenameshere), pch=rev(colourz$pch),#
    col=rev(colourz$col), cex=leg.cex, bty="n")
olobs <- c("thistle3", "pink4", "plum4", #
      "skyblue3", "skyblue4", "dodgerblue1", "dodgerblue2", "dodgerblue3", "dodgerblue4",#
       "darkslateblue", "navy")#
pchobs <- c(rep(1:11,2))#
pchobs[9] <- 1#
#
ylim<-c(-40, 30)#
#
nonpepsites <- subset(sens.m.nlout, phentype=="flo")#
nonpepsites <- subset(nonpepsites, site!="fitter" & site!="washdc" & site!="harvard"#
    & site!="mohonk" & site!="concord") # also excluding concord because not in Ben's Ecosystems paper#
#
allbutconc <- rbind(nonpepsites, pepclimsites)#
allbutconc <- allbutconc[with(allbutconc, order(-MeanTemp)),]#
#
obssitenameshere <- unique(allbutconc[["site"]])#
colourz <- as.data.frame(cbind(site=obssitenameshere,#
    col=colobs[1:length(obssitenameshere)], pch=rev(pchobs[1:length(obssitenameshere)])))#
colourz$pch <- as.numeric(colourz$pch)#
#
quartz("Quartz", width=6, height=10, pointsize=12)#
par(mfrow=c(2,1))#
plot(pepclimsites$sens~pepclimsites$meaneventdate, type="n",#
    ylab="sensitivity", xlab="mean event date", ylim=ylim)#
for(i in c(1:length(unique(pepclimsites$site)))){#
   dater <- subset(pepclimsites, site==unique(pepclimsites$site)[i])#
   colourhere <- subset(colourz, site==unique(pepclimsites$site)[i])#
   points(dater$sens~dater$meaneventdate, col=colourhere$col,#
      pch=colourhere$pch, ylim=ylim)#
 }#
plot(modseg, add=TRUE)#
plot(nonpepsites$sens~nonpepsites$meaneventdate, type="n",#
    ylab="sensitivity", xlab="mean event date", ylim=ylim)#
for(i in c(1:length(unique(nonpepsites$site)))){#
   dater <- subset(nonpepsites, site==unique(nonpepsites$site)[i])#
   colourhere <- subset(colourz, site==unique(nonpepsites$site)[i])#
   points(dater$sens~dater$meaneventdate, col=colourhere$col,#
       pch=colourhere$pch, ylim=ylim)#
 }#
#
legend(legend.x, legend.y, rev(obssitenameshere), pch=rev(colourz$pch),#
    col=rev(colourz$col), cex=leg.cex, bty="n")
colobs <- c("thistle3", "pink4", "plum4", #
      "skyblue3", "skyblue4", "dodgerblue1", "dodgerblue2", "dodgerblue3", "dodgerblue4",#
       "darkslateblue", "navy")#
pchobs <- c(rep(1:11,2))#
pchobs[9] <- 1#
#
ylim<-c(-40, 30)#
#
nonpepsites <- subset(sens.m.nlout, phentype=="flo")#
nonpepsites <- subset(nonpepsites, site!="fitter" & site!="washdc" & site!="harvard"#
    & site!="mohonk" & site!="concord") # also excluding concord because not in Ben's Ecosystems paper#
#
allbutconc <- rbind(nonpepsites, pepclimsites)#
allbutconc <- allbutconc[with(allbutconc, order(-MeanTemp)),]#
#
obssitenameshere <- unique(allbutconc[["site"]])#
colourz <- as.data.frame(cbind(site=obssitenameshere,#
    col=colobs[1:length(obssitenameshere)], pch=rev(pchobs[1:length(obssitenameshere)])))#
colourz$pch <- as.numeric(colourz$pch)#
#
quartz("Quartz", width=6, height=10, pointsize=12)#
par(mfrow=c(2,1))#
plot(pepclimsites$sens~pepclimsites$meaneventdate, type="n",#
    ylab="sensitivity", xlab="mean event date", ylim=ylim)#
for(i in c(1:length(unique(pepclimsites$site)))){#
   dater <- subset(pepclimsites, site==unique(pepclimsites$site)[i])#
   colourhere <- subset(colourz, site==unique(pepclimsites$site)[i])#
   points(dater$sens~dater$meaneventdate, col=colourhere$col,#
      pch=colourhere$pch, ylim=ylim)#
 }#
plot(modseg, add=TRUE)#
plot(nonpepsites$sens~nonpepsites$meaneventdate, type="n",#
    ylab="sensitivity", xlab="mean event date", ylim=ylim)#
for(i in c(1:length(unique(nonpepsites$site)))){#
   dater <- subset(nonpepsites, site==unique(nonpepsites$site)[i])#
   colourhere <- subset(colourz, site==unique(nonpepsites$site)[i])#
   points(dater$sens~dater$meaneventdate, col=colourhere$col,#
       pch=colourhere$pch, ylim=ylim)#
 }#
#
legend(legend.x, legend.y, rev(obssitenameshere), pch=rev(colourz$pch),#
    col=rev(colourz$col), cex=leg.cex, bty="n")
12*0.6
12*9
280*(50/65)
options(stringsAsFactors=FALSE)#
#
# library(RColorBrewer)#
library(segmented)#
library(zoo)#
#
sens.m <- read.csv("~/Documents/R/NCEAS/Phenology/WorkingGroup/Experiments/Meta/outputdata/obs.csv", header=TRUE)#
# sens.m is main sensitivity#
names(sens.m)[names(sens.m)=="sens.m"] <- "sens"#
sens.m.sm <- subset(sens.m, select=c("genus", "species", "p.val", "sens", "phase",#
     "meaneventdate", "site", "phentype"))#
#
# climate data#
climat <- read.csv("~/Documents/R/NCEAS/Phenology/WorkingGroup/Experiments/Meta/outputdata/siteinfo/climat.csv", header=TRUE)#
climat.mat <- subset(climat, select=c("site", "MinTemp", "MeanTemp"))#
#
sens.m.smclim <- merge(sens.m.sm, climat.mat, by="site")#
#
# subset as done in manuscript#
sens.m.nl <- subset(sens.m.smclim, site!="bertel" & site!="luquillo" & site !="sevcore")#
sens.m.nlout <- subset(sens.m.nl, abs(sens)<40)#
#
# sort sites by MAT#
sens.m.nlout <- sens.m.nlout[with(sens.m.nlout, order(-MeanTemp)),]#
#
###
## Do some breakpoint work#
###
#
# do for washdc, konza, concord, fargo, chinnor and gothic#
# other sites have less than 100 species#
#
# method 1: use segmented package (see method 2, way below)#
conc <- subset(sens.m.nlout, site=="concord")#
modlin <- lm(sens~meaneventdate, data=conc)#
modseg <- segmented(modlin, seg.Z = ~meaneventdate, psi=149, data=conc)#
#
# concord is 128, fitter is 50, dc is 106, konza is 70, and gothic is 157#
#
pepclimsites <- subset(sens.m.nlout, phentype=="flo")#
pepclimsites <- subset(pepclimsites, site=="fitter"|site=="washdc"|site=="harvard"|site=="mohonk")#
pepclimsites <- subset(pepclimsites, p.val<0.1)#
modlin <- lm(sens~meaneventdate, data=pepclimsites)#
modseg <- segmented(modlin, seg.Z = ~meaneventdate, psi=149, data=pepclimsites)#
# plot(modseg, add=TRUE)#
# with all data: including concord it's 106.9 (vs. 111.1)#
# excluding all >0.1 pvalue: with concord it's 115.3; without it's 120.2
summary(modseg)
tolower("REPRODUCTIVE SYNCHRONY OF A TROPICAL SHRUB - EXPERIMENTAL STUDIES ON EFFECTS OF POLLINATORS AND SEED PREDATORS ON HYBANTHUS-PRUNIFOLIUS (VIOLACEAE)")
1.5/4
0.75/4
1.75/4
1.33/4
mhk <- read.csv("~/Documents/R/NCEAS/Phenology/WorkingGroup/Experiments/Meta/obs/obs3mon/pre3/cook_mhk_usa_sci_rev_min2.csv", header=TRUE)
head(mhk)
plot(Beta.daysperC.~meanFFD, data=mhk)
mhk <- read.csv("~/Documents/R/NCEAS/Phenology/WorkingGroup/Experiments/Meta/obs/obs3mon/pre3/fitter_chn_grb_sci_rev_min2.csv", header=TRUE)
plot(Beta.daysperC.~meanFFD, data=mhk)
mhk <- read.csv(~/Documents/R/NCEAS/Phenology/WorkingGroup/Experiments/Meta/obs/ObsfitsMar2011/fitter_chn_grb_meta_new.csv, header=TRUE)
mhk <- read.csv("~/Documents/R/NCEAS/Phenology/WorkingGroup/Experiments/Meta/obs/ObsfitsMar2011/fitter_chn_grb_meta_new.csv", header=TRUE)
head(mhk)
plot(META_mean_sens~meanFFD, data=mhk)
plot( Beta.daysperC.~meanFFD, data=mhk)
mhk <- read.csv("~/Documents/R/NCEAS/Phenology/WorkingGroup/Experiments/Meta/obs/ObsfitsMar2011/harvard_who_usa_meta_new.csv", header=TRUE)
plot( Beta.daysperC.~meanFFD, data=mhk)
70/55
260*1.27
35/55
38/55
0.7*230
tolower("The Unusual Nature of Recent Snowpack Declines in the North American Cordillera")
tolower("TFavorable Climate Change Response Explains Non-Native Species' Success in Thoreau's Woods")
options(stringsAsFactors=FALSE)#
#
require(picante)#
#
# from phylo.R#
#
# make sure you have real date to get this to run ##
subsetEarliest <- function(dat, by, datevar="date") {#
    groups <- do.call("paste", dat[by])#
    do.call("rbind", lapply(split(dat, groups),#
        function(x) x[which.min(x[[datevar]]),]))#
}#
#
# Read in WG raw data ##
ffdfld <- read.csv("/Users/Lizzie/Documents/Subversion/phenology/Data/pheno_raw.csv", header=TRUE)#
derived <- read.csv("/Users/Lizzie/Documents/Subversion/phenology/Data/pheno_derived.csv", header=TRUE)#
bci <- subset(derived, site=="bci")#
ffdder <- subset(derived, event=="meanflowerstart" & site != "cape")#
ffdder <- rbind(ffdder, bci)#
#
# Get raw down to uniform events ##
ffdfld <- subset(ffdfld, event == "ffd"|event == "fld"| event=="firstleaf"|#
    event=="firstleaf50" | event=="ffdbasket")#
ffdfld$event[ffdfld$event=="firstleaf50"] <- "fld"#
ffdfld$event[ffdfld$event=="firstleaf"] <- "fld"#
ffdfld$event[ffdfld$event=="ffdbasket"] <- "ffd"#
#
# Skip plots for now so aggregate to earliest ##
# It won't aggregate if plot is NA so only do the few sites ##
ffd <- subset(ffdfld, event=="ffd")#
ffd$date <- as.Date(ffd$date)#
#
## check here what to do with network sites! ##
# Not dealing with them now ##
plotsites <- subset(ffd, site=="gothic" | site == "niwot"| site == "sevcore"|#
    site == "sevtrans" | site == "luquillo" | site == "bertel")#
restof <- subset(ffd, site !="gothic" & site != "niwot"&#
    site != "sevcore" & site != "sevtrans" & site != "luquillo" & site != "bertel")#
#
ffdsite <- subsetEarliest(plotsites, c("site", "genus", "species",#
        "year"))#
# checked the dimensions above and we're good so rebind:#
#
ffdsites <- rbind(ffdsite, restof)#
ffdsitesmean <- aggregate(ffdsites["doy"], ffdsites[c("site", "event", "genus", "species")],#
    FUN=mean)#
ffddermean <- aggregate(ffdder["doy"], ffdder[c("site", "event", "genus", "species")],#
    FUN=mean)#
#
ffds1 <- rbind(ffddermean, ffdsitesmean)#
ffds <- subset(ffds1, is.na(doy)==FALSE)
mltree.rooted <- read.tree("~/Documents/Subversion/phenology/notposting/phylo/treesetc/full.nicolas.rooted.tre")#
mltree.rooted[["node.label"]] <- NULL#
#
lookup<-read.csv("~/Documents/Subversion/phenology/notposting/phylo/treesetc/new_fam_lookup.csv",header=T)#
#
colnames(lookup)<-c("genus", "kew_gen","kew_fam", "apg_fam")#
lookup$genus<-tolower(lookup$genus)#
lookup$kew_gen<-tolower(lookup$kew_gen)#
lookup_lower <- lookup#
lookup_lower$genus <- tolower(lookup$genus)
ffds$genus <- tolower(obstraits$genus)#
ffds <- merge(ffds,lookup_lower)#
#
ffds$phylolatbi <- paste(tolower(paste(ffds$kew_gen)),#
    tolower(paste(ffds$species)), sep="_")
ffds$genus <- tolower(ffds$genus)#
ffds <- merge(ffds,lookup_lower)#
#
ffds$phylolatbi <- paste(tolower(paste(ffds$kew_gen)),#
    tolower(paste(ffds$species)), sep="_")
hvd <- subset(ffds, site=="harvard")
head(hvd)
unique(ffds$site)
head(ffds)
Read in WG raw data ##
ffdfld <- read.csv("/Users/Lizzie/Documents/Subversion/phenology/Data/pheno_raw.csv", header=TRUE)#
derived <- read.csv("/Users/Lizzie/Documents/Subversion/phenology/Data/pheno_derived.csv", header=TRUE)#
bci <- subset(derived, site=="bci")#
ffdder <- subset(derived, event=="meanflowerstart" & site != "cape")#
ffdder <- rbind(ffdder, bci)#
#
# Get raw down to uniform events ##
ffdfld <- subset(ffdfld, event == "ffd"|event == "fld"| event=="firstleaf"|#
    event=="firstleaf50" | event=="ffdbasket")#
ffdfld$event[ffdfld$event=="firstleaf50"] <- "fld"#
ffdfld$event[ffdfld$event=="firstleaf"] <- "fld"#
ffdfld$event[ffdfld$event=="ffdbasket"] <- "ffd"#
#
# Skip plots for now so aggregate to earliest ##
# It won't aggregate if plot is NA so only do the few sites ##
ffd <- subset(ffdfld, event=="ffd")#
ffd$date <- as.Date(ffd$date)#
#
## check here what to do with network sites! ##
# Not dealing with them now ##
plotsites <- subset(ffd, site=="gothic" | site == "niwot"| site == "sevcore"|#
    site == "sevtrans" | site == "luquillo" | site == "bertel")#
restof <- subset(ffd, site !="gothic" & site != "niwot"&#
    site != "sevcore" & site != "sevtrans" & site != "luquillo" & site != "bertel")#
#
ffdsite <- subsetEarliest(plotsites, c("site", "genus", "species",#
        "year"))#
# checked the dimensions above and we're good so rebind:#
#
ffdsites <- rbind(ffdsite, restof)#
ffdsitesmean <- aggregate(ffdsites["doy"], ffdsites[c("site", "event", "genus", "species")],#
    FUN=mean)#
ffddermean <- aggregate(ffdder["doy"], ffdder[c("site", "event", "genus", "species")],#
    FUN=mean)#
#
ffds1 <- rbind(ffddermean, ffdsitesmean)#
ffds <- subset(ffds1, is.na(doy)==FALSE)
head(ffds)
ffds$genus <- tolower(ffds$genus)#
ffds <- merge(ffds,lookup_lower)#
#
ffds$phylolatbi <- paste(tolower(paste(ffds$kew_gen)),#
    tolower(paste(ffds$species)), sep="_")
head(ffds)
hvd <- subset(ffds, site=="harvard")
head(hvd)
unique(hvd$ffd)
unique(hvd$event)
hvdtre <- drop.tip(mltree.rooted, which(!mltree.rooted[["tip.label"]] %in%#
    hvd[["phylolatbi"]]))
write.tree(hvdtre, "~/Documents/git/R/misc/climtree/output/hvdtree.tre")
write.csv(hvd, "~/Documents/git/R/misc/climtree/output/hvdffd.csv")
row.names(ffds) <- ffds$phylolatbi
hvd <- subset(ffds, site=="harvard")
hvdsm <- subset(hvd, select="doy")
head(hvdsm)
ffds <- subset(ffds1, is.na(doy)==FALSE)
ffds$genus <- tolower(ffds$genus)#
ffds <- merge(ffds,lookup_lower)#
#
ffds$phylolatbi <- paste(tolower(paste(ffds$kew_gen)),#
    tolower(paste(ffds$species)), sep="_")#
row.names(ffds) <- ffds$phylolatbi
row.names(hvd) <- hvd$phylolatbi
hvdsm <- subset(hvd, select="doy")
head(hvdsm)
write.csv(hvdsm, "~/Documents/git/R/misc/climtree/output/hvdffd.csv")
write.delim(hvdsm, "~/Documents/git/R/misc/climtree/output/hvdffd.txt")
write.file(hvdsm, "~/Documents/git/R/misc/climtree/output/hvdffd.txt")
write.table(hvdsm, "~/Documents/git/R/misc/climtree/output/hvdffd.txt")
hvdsm
goo <- read.csv("~/Documents/Subversion/phenology/gothic/species/gothicclean.csv", header=TRUE)
dim(goo)
head(goo)
try <- subset(goo, species=="Erysimum asperum")
head(try)
try <- subset(goo, species=="Erysimum capitatum ")
try <- subset(goo, species=="Erysimum capitatum")
head(try)
try <- subset(goo, species=="Silene drummondii ")
try <- subset(goo, species=="Silene drummondii")
head(try)
try <- goo[grep("Silene", goo$species),]
head(try)
unique(try$species)
try <- goo[grep("Orobanche", goo$species),]
unique(try$species)
try <- goo[grep("Orobanche uni", goo$species),]
unique(try$species)
unique(try$date)
try <- goo[grep("Orobanche f", goo$species),]
unique(try$date)
options(stringsAsFactors=FALSE)#
library(MCMCglmm)#
obstraits <- read.csv("~/Documents/git/R/ratesphen/output/wtf_JD.csv", header=TRUE)#
#
###
## deal with the damn tree#
## #
mltree.rooted <- read.tree("~/Documents/Subversion/phenology/notposting/phylo/treesetc/full.nicolas.rooted.tre")#
mltree.rooted[["node.label"]] <- NULL#
#
lookup<-read.csv("~/Documents/Subversion/phenology/notposting/phylo/treesetc/new_fam_lookup.csv",header=T)#
#
colnames(lookup)<-c("genus", "kew_gen","kew_fam", "apg_fam")#
lookup$genus<-tolower(lookup$genus)#
lookup$kew_gen<-tolower(lookup$kew_gen)#
lookup_lower <- lookup#
lookup_lower$genus <- tolower(lookup$genus)#
#
obstraits$genus <- tolower(obstraits$genus)#
obstraits <- merge(obstraits,lookup_lower)#
#
obstraits$phylolatbi <- paste(tolower(paste(obstraits$kew_gen)),#
    tolower(paste(obstraits$species)), sep="_")#
#
#This bit adds the species name to the alternative genus to match with the tree#
#but the original genus name should still be in the dataframe#
lookup_lower <- lookup#
lookup_lower$genus <- tolower(lookup$genus)#
obstraits<-merge(obstraits,lookup_lower)#
obstraits$name<-paste(tolower(paste(obstraits$kew_gen)), tolower(paste(obstraits$species)), sep="_")#
#
obstraitsff <- subset(obstraits, phentype=="flo")#
# need to deal with species at mulitple sites!#
# for now, I just kill them#
obstraitsff.nodup <- obstraitsff[!duplicated(obstraitsff$phylolatbi),]#
obstraitsff.mod <- subset(obstraitsff.nodup, select=c("phylolatbi", "name",#
    "meaneventdate","pmode", "dur"))#
names(obstraitsff.mod)[names(obstraitsff.mod)=="phylolatbi"] <- "taxon"#
row.names(obstraitsff.mod) <- obstraitsff.mod$phylolatbi#
#
# fill in missing trait data someday#
obstraitsff.mod <- subset(obstraitsff.mod, is.na(obstraitsff.mod$pmode)==FALSE)#
obstraitsff.mod <- subset(obstraitsff.mod, is.na(obstraitsff.mod$dur)==FALSE)#
#
mltree.sm <- drop.tip(mltree.rooted, which(!mltree.rooted[["tip.label"]] %in%#
    obstraitsff.mod[["taxon"]]))#
#
# quickly, which species are not in tree?#
notintree <- obstraitsff.mod$taxon[which(!obstraitsff.mod$taxon %in%#
    mltree.sm[["tip.label"]])]#
# this is odd#
which(mltree.rooted[["tip.label"]]=="arabidopsis_thaliana")
which(mltree.rooted[["tip.label"]]=="arabis_thaliana")
which(mltree.rooted[["tip.label"]]=="thaliana")
tolower("CAUSE-EFFECT RELATIONSHIPS IN ENERGY-FLOW, TROPHIC STRUCTURE, AND INTERSPECIFIC INTERACTIONS")
source('~/Documents/git/R/meta_ep2/episode2Meta_bace.R', chdir = TRUE)
anova(gddmod)
tolower("SEVERAL MEASURES OF TROPHIC STRUCTURE APPLICABLE TO COMPLEX FOOD WEBS")
source('~/Documents/git/R/meta_ep2/episode2Meta_bace.R', chdir = TRUE)
head(hfdathere)
hfphen
treat <- c(rep(a-b, 5))
treat <- c(rep("a", 5))
?rep
treat <- c(rep(("a", "b"), each=5))
treat <- c(rep(1:5, each=5))
resp <- rand(25)
?random
?sample
resp <- sample(c(10:100), 25)
resp
summary(lm(resp~as.factor(treat))
)
library(car)
Anova(lm(resp~as.factor(treat)))
treat <- c(rep(1, each=5))
resp <- sample(c(10:100), 5)
resp <- sample(c(10:100), 10)
treat <- c(rep(1:2, each=5))
Anova(lm(resp~as.factor(treat)))
resp
Started 14 March 2011 ####
### By Lizzie and Master Regetz ####
#
### Cleaning up Gothic, Act III ####
### This follows gothiccleanplots -- which just does plots ####
### This integrates plot changes and clean spp. then integrates cleaned names #####
#
options(stringsAsFactors = FALSE)#
#
setwd("/Users/Lizzie/Documents/Subversion/phenology/gothic/species")#
#
# define helper function to replace all occurrences of#
# consecutive spaces with a single space, and remove trailing spaces#
fix.spaces <- function(x) {#
    x <- gsub(" +", " ", x)#
    sub(" +$", "", x)#
}#
#
# Jim, where is the test-clean on svn? ##
## get the gothic data ###
gothic <- read.csv("/Users/Lizzie/Documents/Professional/NCEAS/Research/Phenology/Data/Gothic/Compiling data/October2010Progress/gothic-testclean/gothic-cleaned.csv", header=TRUE)#
# put the new plot info in, will need it later #
gothic$filelow <- tolower(gothic$file)#
lookupcorr <- read.csv("/Users/Lizzie/Documents/Subversion/phenology/gothic/plots/lookupplotcorr.csv", header=TRUE)#
gothic <- merge(gothic, lookupcorr, by.x="filelow", by.y="sites", all.x=TRUE)#
gothic$plotNums <- paste(gothic$plots, gothic$plotnums, sep="-")#
#
## Cleaning rounds ###
# first round of cleaning by G. Aldridge ##
cleanga <- read.csv("GAcleaned/cleansppsbyhandga.csv",header=TRUE)#
# second round of cleaning by G. Aldridge ##
cleanga2 <- read.csv("GAcleaned/cleansppsr2rga.csv",header=TRUE)#
# third round of cleaning by G. Aldridge ##
cleanga3 <- read.csv("GAcleaned/cleansppsr3rga.csv",header=TRUE)#
# fourth round of cleaning by G. Aldridge ##
cleanga4 <- read.csv("GAcleaned/cleansppsr4rga.csv",header=TRUE)#
# last round of cleaning by G. Aldridge ##
# appears as 6 since round 5 was plot-based ##
cleanga6p1 <- read.csv("GAcleaned/cleansppsr6rga.csv",header=TRUE)#
cleanga6p2 <- read.csv("GAcleaned/cleanednamesga.csv",header=TRUE)#
cleanga6p2use <- subset(cleanga6p2, needs.change=="yes")#
cleanga6 <- rbind(cleanga6p1, cleanga6p2use)#
# cleaning by David Inouye (DI - file used here was created by Lizzie using#
# cleanednamesDI.csv, 9 June 2011 version) ##
# note that I changed this file some after comments from DI rec'd 3 and 6.Feb.2013 in cleaned_DIchanges3.csv and GothicInouye_phenspecies2.csv (see notes column)#
cleandi <- read.csv("DIcleaned/cleaned_DIchanges.csv",header=TRUE)#
#
## Create one look-up table for cleaned names ###
names(cleanga2)[names(cleanga2)=="need.change"] <- "needs.change"#
names(cleanga2)[names(cleanga2)=="new.genus"] <- "lookup.gen"#
names(cleanga2)[names(cleanga2)=="new.epithet"] <- "lookup.sp"#
names(cleanga2)[names(cleanga2)=="species"] <- "givenname"#
names(cleanga3)[names(cleanga3)=="new.genus"] <- "lookup.gen"#
names(cleanga3)[names(cleanga3)=="new.epithet"] <- "lookup.sp"#
names(cleanga3)[names(cleanga3)=="species"] <- "givenname"#
names(cleanga6)[names(cleanga6)=="lookup.genus"] <- "lookup.gen"#
names(cleanga6)[names(cleanga6)=="lookup.epithet"] <- "lookup.sp"#
names(cleandi)[names(cleandi)=="lookup.genus"] <- "lookup.gen"#
names(cleandi)[names(cleandi)=="lookup.epithet"] <- "lookup.sp"#
#
cleanga3$needs.change <- "yes"#
cleanga3$notes <- NA#
cleanga6$notes <- NA#
#
cleangarbind <- subset(cleanga, needs.change=="no" | lookup.gen!="") #
cleanga2rbind <- subset(cleanga2, needs.change=="no" |lookup.gen!="") #
cleanga3rbind <- subset(cleanga3, lookup.gen!="")#
cleanga4rbind <- subset(cleanga4, needs.change=="no" |lookup.gen!="")#
cleanga6rbind <- subset(cleanga6, needs.change=="no" |lookup.gen!="")#
#
cleangarbind <- subset(cleangarbind, select=c("givenname", "needs.change", #
    "lookup.gen", "lookup.sp", "notes"))#
cleanga2rbind <- subset(cleanga2rbind, select=c("givenname", "needs.change",#
   "lookup.gen", "lookup.sp", "notes"))#
cleanga3rbind <- subset(cleanga3rbind, select=c("givenname", "needs.change",#
   "lookup.gen", "lookup.sp", "notes"))#
cleanga4rbind <- subset(cleanga4rbind, select=c("givenname", "needs.change",#
   "lookup.gen", "lookup.sp", "notes"))#
#
cleanedbyGA <- rbind(cleangarbind, cleanga2rbind, cleanga3rbind,#
    cleanga4rbind, cleanga6rbind)#
# cleanedbyGA <- subset(cleanedbyGA, lookup.gen!="")#
## fix some issues#
# initially I tried to update each specifically so that spp that did not#
# need changes were noted as such, then I just made the corrections#
# Thus some species were changed even when they were right to start with, which seems fine.#
cleanedbyGA$lookup.sp[which(cleanedbyGA$lookup.sp=="columbinaum")] <- "columbianum"#
cleanedbyGA$needs.change[which(cleanedbyGA$givenname=="Aquilegia coerulea")] <- "no"#
cleanedbyGA$lookup.gen[which(cleanedbyGA$givenname=="Aquilegia coerulea")] <- ""#
cleanedbyGA$lookup.sp[which(cleanedbyGA$givenname=="Aquilegia coerulea")] <- ""#
cleanedbyGA$lookup.sp[which(cleanedbyGA$lookup.sp=="engelmanii")] <- "engelmannii"#
cleanedbyGA$needs.change[which(cleanedbyGA$givenname=="Castilleja linariaefolia")] <- "no"#
cleanedbyGA$lookup.gen[which(cleanedbyGA$givenname=="Castilleja linariaefolia")] <- ""#
cleanedbyGA$lookup.sp[which(cleanedbyGA$givenname=="Castilleja linariaefolia")] <- ""#
cleanedbyGA$lookup.sp[which(cleanedbyGA$lookup.sp=="linariifolia")] <- "linariaefolia"#
cleanedbyGA$lookup.sp[which(cleanedbyGA$lookup.sp=="nuttallianium")] <- "nuttallianum"#
cleanedbyGA$lookup.gen[which(cleanedbyGA$lookup.gen=="Descurainia")] <- "Descurainea"#
cleanedbyGA$lookup.sp[which(cleanedbyGA$lookup.sp=="trachycaulus")] <- "trachycaulis"#
cleanedbyGA$lookup.gen[which(cleanedbyGA$lookup.gen=="Koeleria")] <- "Koelaria"#
cleanedbyGA$lookup.sp[which(cleanedbyGA$lookup.sp=="stellata")] <- "stellatum"#
cleanedbyGA$lookup.sp[which(cleanedbyGA$lookup.sp=="integerimus")] <- "integerrimus"#
cleanedbyGA$needs.change[which(cleanedbyGA$givenname=="Koeleria macrantha")] <- "yes"#
cleanedbyGA$lookup.gen[which(cleanedbyGA$givenname=="Koeleria macrantha")] <- "Koelaria"#
cleanedbyGA$lookup.sp[which(cleanedbyGA$givenname=="Koeleria macrantha")] <- "macrantha"#
#
subset(cleanedbyGA, duplicated(cleanedbyGA$givenname) & needs.change=="yes")#
cleanedbyGA$givenname <- fix.spaces(cleanedbyGA$givenname)#
# cleanedbyGA <- cleanedbyGA[!duplicated(cleanedbyGA$givenname),]#
# most are duplicate nos, but not all, see above.#
# for these we preferntially keep those with new names over needs.change=='no'#
cleanedbyGA <- cleanedbyGA[order(cleanedbyGA$needs.change, decreasing=TRUE, na.last=TRUE) , ]#
cleanedbyGA <- cleanedbyGA[!duplicated(cleanedbyGA$givenname),]#
cleanedspp <- cleanedbyGA#
write.csv(cleanedspp, "cleanedspp.csv", row.names=FALSE)#
#
## Now start integrating cleaned names ###
# integrate cleaned names that must be plot-based#
# aka the grasses#
cleangrassga <- read.csv("GAcleaned/gothicunkngrassga.csv",header=TRUE)#
cleangrass <- subset(cleangrassga, new.genus!="" & new.epithet!="",#
    select=c("species", "new.genus", "new.epithet", "plotNums"))#
cleangrass <- unique(cleangrass)#
if (any(duplicated(cleangrass[c("species", "plotNums")]))) {#
    stop("duplicated merge columns in cleangrass")#
}#
gothic1 <- merge(gothic, cleangrass, by=c("species", "plotNums"),#
    all.x=TRUE, sort=FALSE)#
#
# replaces species with new names, get which rows changed#
gothic1$species <- ifelse(is.na(gothic1$new.genus)==FALSE,#
    paste(gothic1$new.genus, gothic1$new.epithet), gothic1$species)#
grassfill <- which(is.na(gothic1$new.genus)==FALSE) #
#
# get rid of unwanted columns #
gothic1 <- subset(gothic1, select=-c(new.genus, new.epithet))#
gothic1$species <- fix.spaces(gothic1$species)#
#
##
# integrate other cleaned names back into gothic data#
##
#
# merged gothic and cleanedspp based on the original name#
gothic2 <- merge(gothic1, cleanedspp, by.x="species", by.y="givenname",#
    all.x=TRUE, sort=FALSE)#
#
# transform needs.change into was.changed, replacing NAs with "tbd"#
names(gothic2)[names(gothic2)=="needs.change"] <- "was.changed"#
#
# for those that were cleaned, replace original names with cleaned names#
gothic2$was.changed[is.na(gothic2$was.changed)] <- "tbd"#
gothic2$species <- ifelse(gothic2$was.changed=="yes",#
    paste(gothic2$lookup.gen, gothic2$lookup.sp), gothic2$species)#
gothic2$species <- fix.spaces(gothic2$species)#
#
# incorporate additional lookup.gen/lookup.sp corrections from DI#
# ...first clean white space in DI lookup.gen column#
cleandi$lookup.gen <- fix.spaces(cleandi$lookup.gen)#
# ...identify which gothic2 rows correspond to DI corrections#
needsCleanDI <- gothic2$species %in% cleandi$givenname#
# ...update the lookup.gen and lookup.sp columns accordingly#
gothic2$lookup.gen[needsCleanDI] <-#
    cleandi$lookup.gen[match(gothic2$species[needsCleanDI],#
    cleandi$givenname)]#
gothic2$lookup.sp[needsCleanDI] <-#
    cleandi$lookup.sp[match(gothic2$species[needsCleanDI],#
    cleandi$givenname)]#
# ...flag these records as having been changed#
gothic2$was.changed[needsCleanDI] <- "yes"#
# ...and generate updated binomials#
gothic2$species[needsCleanDI] <- paste(gothic2$lookup.gen[needsCleanDI],#
    gothic2$lookup.sp[needsCleanDI])#
#
# add in plot-based cleaning above#
# note unkn grasses#
# change the bromes first, in case the word 'grass' ever co-occurs with brome/bromus#
# okay, so I admit at this point we end up with none of this doing anything#
# cleanedspp seems to cleans these all out, but I am leaving them for safe-keeping#
unknbrome1 <- which(grepl("brome", gothic2$species)==TRUE)#
unknbrome2 <- which(grepl("Brome", gothic2$species)==TRUE)#
unknbrome3 <- which(grepl("Bromus", gothic2$species)==TRUE)#
gothic2$species[unknbrome1] <- "Bromus sp."#
gothic2$species[unknbrome2] <- "Bromus sp."#
gothic2$species[unknbrome3] <- "Bromus sp."#
#
unkngrasses <- which(grepl("grass", gothic2$species)==TRUE)#
unknGrasses <- which(grepl("Grass", gothic2$species)==TRUE)#
gothic2$species[unkngrasses] <- "unkngrass"#
gothic2$species[unknGrasses] <- "unkngrass"#
#
# note changes in was.changed#
gothic2$was.changed[grassfill] <- "yes"#
gothic2$was.changed[unkngrasses] <- "yes"#
gothic2$was.changed[unknGrasses] <- "yes"#
gothic2$was.changed[unknbrome1] <- "yes"#
gothic2$was.changed[unknbrome2] <- "yes"#
gothic2$was.changed[unknbrome3] <- "yes"#
#
# Note that Stipa lettermanii (one n) and Muhlenbergia montana#
# (the only two never noted as not needing cleaning and not cleaned)#
# are, according to a 13.Apr.2011 email from G. Aldridge a-okay ##
# So, as of August 2013, updating them from was.changed "tbd" to "no"#
gothic2$was.changed[gothic2$species=="Stipa lettermanii"] <- "no"#
gothic2$was.changed[gothic2$species=="Muhlenbergia montana"] <- "no"#
#
# get rid of unwanted columns, don't leave leave 'notes'#
# we can provide cleanedspp with them in it, for those who need it) ##
gothic2 <- subset(gothic2, select=-c(lookup.gen, lookup.sp))#
#
# what's left?#
stillunkn <- subset(gothic2, was.changed=="tbd") # nothing!#
#
# delete the species named Delete and Total Flowers#
# okayed by Amy McKinney in email 20.Sep.2012#
gothicfixed <- subset(gothic2, species!="Delete")#
gothicfixed <- subset(gothicfixed, species!="Total Flowers")#
#
knowns <- as.data.frame(sort(unique(gothicfixed$species)))#
# allspp <- as.data.frame(sort(unique(gothic2$species)))#
#
write.csv(knowns, "cleanednames.csv", row.names=FALSE)#
write.csv(gothic2, "gothicclean.csv", row.names=FALSE)#
####
### See gothicclean_choppedCode.R for code that used to be here #
### (as of 7.Mar.12, EMW cut it)
newsy <- readclipboard()
newsy <- readClipboard()
readClipboard()
??readClipboard()
??readClipboard
write.table(goo, "clipboard", sep="\t", row.names=FALSE)
write.table(x, "clipboard", sep="\t", row.names=FALSE)
x <- ()
x <- c()
write.table(x, "clipboard", sep="\t", row.names=FALSE)
goo <- read.csv("/Users/Lizzie/Desktop/goo.csv")
goo
duplicated(goo[,1], goo[,2])
which(duplicated(goo[,1], goo[,2])==TRUE)
duplicated(goo[1,1], goo[1,2])
identical(goo[1,1], goo[1,2])
identical(goo[,1], goo[,2])
